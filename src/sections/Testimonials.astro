---
import { Image } from "astro:assets";
import heroImage from "@/assets/images/testimonial-img.png";
import TagCalification from "@/components/shared/TagCalification.astro";
import TagStudents from "@/components/shared/TagStudents.astro";
import TestimonyCard from "@/components/TestimonyCard.astro";

import { testimonials } from "@/data/testimonials";
import { Icon } from "astro-icon/components";

---


<section class="testimonials py-20">
    <div class="container mx-auto p-3">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-5">
            <div class="">
                <div class="flex justify-center lg:justify-start">
                    <p class="border-emerald-500 border-2 rounded-lg p-2 px-4 inline-block mb-4">
                        游눘 Opiniones reales de estudiantes reales 
                    </p>
                </div>
                <h2 class="text-4xl font-bold text-center lg:text-start text-slate-200">
                    Vea c칩mo hemos ayudado a nuestras estudiantes en su aprendizaje.
                </h2>
                <p class="text-xl font-bold my-4 text-gray-500 text-center lg:text-start">
                    Mas de 10 mil rese침as en Udemy.
                </p>
                <div class="overflow-hidden relative">
                    <div class="carousel">
                        {
                            testimonials.map((testimony:any) => (
                                <div class="carousel-item p-3 rounded-lg">
                                    <TestimonyCard testimony={testimony} />
                                </div>
                            ))
                        }
                    </div>
                    <button id="prev" class="absolute top-0 left-0  text-slate-600 text-2xl h-full">
                        <Icon name="arrow-left-icon" />
                    </button>
                    <button id="next" class="absolute top-0 right-0 text-slate-600 text-2xl h-full">
                        <Icon name="arrow-right-icon" />
                    </button>
                </div>
            </div>
            <div class="hidden lg:flex justify-center items-center relative">
                <Image src={heroImage} alt="Imagen de Hero" width={1000} class="w-10/12 rounded-lg"/>  
                <div class="absolute tag-students">
                    <TagStudents />
                </div>

                <div class="absolute tag-calification">
                    <TagCalification />
                </div>
            </div>
        </div>
    </div>
    
</section>


<style>
    .carousel {
      display: flex;
      transition: transform 0.5s ease-in-out;
    }
    .carousel-item {
      min-width: 100%;
    }


    .tag-students{
        top: 5%;
        left: 0;
    }

    .tag-calification{
        bottom: 10%;
        right: 0;
    }
</style>

<script is:inline>
    const carouselFunc = () => {
        const carousel = document.querySelector('.carousel');
        const carouselItems = document.querySelectorAll('.carousel-item');
        const prevBtn = document.getElementById('prev');
        const nextBtn = document.getElementById('next');
        let counter = 0;
        const itemWidth = carouselItems[0].clientWidth;
        const autoSlideInterval = 5000; // Tiempo de 3 segundos entre cada slide

        // Funci칩n para mover al 칤tem anterior
        const showPrevItem = () => {
            counter--;
            if (counter < 0) {
                counter = carouselItems.length - 1;
            }
            carousel.style.transform = `translateX(${-counter * itemWidth}px)`;
        };

        // Funci칩n para mover al siguiente 칤tem
        const showNextItem = () => {
            counter++;
            if (counter >= carouselItems.length) {
                counter = 0;
            }
            carousel.style.transform = `translateX(${-counter * itemWidth}px)`;
        };

        // Event listeners para los botones
        prevBtn.addEventListener('click', () => {
            showPrevItem();
            resetAutoSlide(); // Reiniciar el intervalo si el usuario interact칰a
        });

        nextBtn.addEventListener('click', () => {
            showNextItem();
            resetAutoSlide(); // Reiniciar el intervalo si el usuario interact칰a
        });

        // Funci칩n para mover autom치ticamente los 칤tems
        const startAutoSlide = () => {
            return setInterval(showNextItem, autoSlideInterval);
        };

        // Reiniciar el auto deslizamiento cuando se interact칰a con los botones
        let autoSlide = startAutoSlide();

        const resetAutoSlide = () => {
            clearInterval(autoSlide);
            autoSlide = startAutoSlide();
        };
    };

    document.addEventListener('astro:page-load', carouselFunc);
</script>

