---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";

interface Props {
  course: CollectionEntry<"udemyCourses">;
}

const { course } = Astro.props;
---

<article
  class="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300"
>
  <!-- Badge de estado -->
  <div class="relative">
    <Image
      src={course.data.image}
      alt={course.data.title}
      class="w-full h-48 object-cover"
      width={400}
      height={192}
    />
    <div class="absolute top-4 left-4 flex gap-2">
      {
        course.data.popular && (
          <span class="px-3 py-1 bg-yellow-300 text-black text-sm font-semibold rounded-full">
            Popular
          </span>
        )
      }
      {
        course.data.new && (
          <span class="px-3 py-1 bg-emerald-500 text-white text-sm font-semibold rounded-full">
            Nuevo
          </span>
        )
      }
    </div>
    {
      course.data.discount && (
        <div class="absolute top-4 right-4 bg-red-500 text-white px-3 py-1 rounded-full text-sm font-bold">
          -{course.data.discount}
        </div>
      )
    }
  </div>

  <div class="p-6">
    <!-- Título y descripción -->
    <h2 class="text-xl font-bold text-gray-900 mb-3 line-clamp-2">
      <a
        href={`/cursos-udemy/${course.id}`}
        class="hover:text-emerald-500 transition-colors"
      >
        {course.data.title}
      </a>
    </h2>
    <p class="text-gray-600 mb-4 line-clamp-3 text-sm">
      {course.data.description}
    </p>

    <!-- Rating y stats -->
    <div class="flex items-center justify-between mb-4">
      <div class="flex items-center gap-2">
        <div class="flex items-center gap-1">
          {
            Array.from({ length: 4 }).map((_, index) => (
              <Icon name="star-icon" class="w-5 h-5 text-emerald-500" />
            ))
          }
          <Icon name="star-half-icon" class="w-5 h-5 text-emerald-500" />
          <span class="text-sm font-semibold text-gray-900"
            >{course.data.qualification}</span
          >
        </div>
        <span class="text-sm text-gray-500">({course.data.qualifications})</span
        >
      </div>
      <div class="text-sm text-gray-500">
        {course.data.hours}h • {course.data.class} clases
      </div>
    </div>

    <!-- Tags -->
    <!-- <div class="flex flex-wrap gap-2 mb-4">
      {
        course.data.tag.slice(0, 3).map((tag) => (
          <a
            href={`/cursos-udemy/categoria/${tag}`}
            class="px-2 py-1 bg-gray-100 hover:bg-emerald-100 text-gray-700 hover:text-emerald-800 text-xs rounded-md transition-colors"
          >
            {tag}
          </a>
        ))
      }
      {
        course.data.tag.length > 3 && (
          <span class="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded-md">
            +{course.data.tag.length - 3}
          </span>
        )
      }
    </div> -->

    <!-- Precio y botón -->
    <div class="flex items-center justify-between">
      <div class="flex items-center gap-2">
        <span class="text-2xl font-bold text-gray-900"
          >${course.data.price}</span
        >
        {
          course.data.discount && (
            <span class="text-sm text-gray-500 line-through">
              $
              {(
                parseFloat(course.data.price) /
                (1 - parseFloat(course.data.discount.replace("%", "")) / 100)
              ).toFixed(2)}
            </span>
          )
        }
      </div>
      <a
        href={course.data.url}
        target="_blank"
        rel="noopener noreferrer"
        class="px-6 py-2 bg-emerald-500 text-white font-semibold rounded-lg hover:bg-emerald-600 transition-colors"
      >
        Ver curso
      </a>
    </div>
  </div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
