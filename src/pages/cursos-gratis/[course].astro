---
import { getCollection, type CollectionEntry, getEntry } from "astro:content";
import MainLayout from "@/layouts/MainLayout.astro";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const courses = await getCollection("freeCourses");
  return courses.map((course) => ({
    params: { course: course.id.replace("/index", "") },
    props: { course },
  }));
}

interface Props {
  course: CollectionEntry<"freeCourses">;
}

const { course } = Astro.props;
const instructor = (await getEntry(course.data.instructor))?.data;

// Obtener todas las lecciones del curso
const allLessons = await getCollection("freeLessons");
const courseLessons = allLessons.filter(
  (lesson) => lesson.data.course === course.id.replace("/index", "")
);

// Organizar lecciones por secciones
const sectionLessons = new Map();
course.data.sections.forEach((section) => {
  const lessons = courseLessons
    .filter((lesson) => lesson.data.section === section.slug)
    .sort((a, b) => a.data.order - b.data.order);
  sectionLessons.set(section.slug, lessons);
});
---

<MainLayout title={`${course.data.title} | Roelcode`}>
  <!-- Hero del curso -->
  <section
    class="py-12 bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800"
  >
    <div class="container mx-auto px-4">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
        <!-- Información del curso -->
        <div>
          <!-- Stack badges -->
          <div class="flex flex-wrap gap-2 mb-4">
            {
              course.data.stack.map((tech) => (
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
                  {tech}
                </span>
              ))
            }
          </div>

          <h1
            class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4"
          >
            {course.data.title}
          </h1>

          <p class="text-xl text-gray-600 dark:text-gray-400 mb-6">
            {course.data.description}
          </p>

          <!-- Información del curso -->
          <div class="grid grid-cols-2 gap-4 mb-8">
            <div class="bg-white dark:bg-gray-800 rounded-lg p-4 shadow-sm">
              <div
                class="flex items-center gap-2 text-gray-600 dark:text-gray-400 mb-1"
              >
                <Icon name="tabler:clock" class="w-4 h-4" />
                <span class="text-sm">Duración</span>
              </div>
              <div class="font-semibold text-gray-900 dark:text-white">
                {course.data.duration}
              </div>
            </div>

            <div class="bg-white dark:bg-gray-800 rounded-lg p-4 shadow-sm">
              <div
                class="flex items-center gap-2 text-gray-600 dark:text-gray-400 mb-1"
              >
                <Icon name="tabler:video" class="w-4 h-4" />
                <span class="text-sm">Lecciones</span>
              </div>
              <div class="font-semibold text-gray-900 dark:text-white">
                {course.data.totalLessons} clases
              </div>
            </div>

            <div class="bg-white dark:bg-gray-800 rounded-lg p-4 shadow-sm">
              <div
                class="flex items-center gap-2 text-gray-600 dark:text-gray-400 mb-1"
              >
                <Icon name="tabler:star" class="w-4 h-4" />
                <span class="text-sm">Nivel</span>
              </div>
              <div class="font-semibold text-gray-900 dark:text-white">
                {course.data.level}
              </div>
            </div>

            <div class="bg-white dark:bg-gray-800 rounded-lg p-4 shadow-sm">
              <div
                class="flex items-center gap-2 text-gray-600 dark:text-gray-400 mb-1"
              >
                <Icon name="tabler:language" class="w-4 h-4" />
                <span class="text-sm">Idioma</span>
              </div>
              <div class="font-semibold text-gray-900 dark:text-white">
                {course.data.language}
              </div>
            </div>
          </div>

          <!-- Botones de acción -->
          <div class="flex flex-col sm:flex-row gap-4">
            <a
              href={`/cursos-gratis/${course.id.replace("/index", "")}/${course.data.sections[0].slug}/${
                courseLessons
                  .find(
                    (l) =>
                      l.data.section === course.data.sections[0].slug &&
                      l.data.order === 1
                  )
                  ?.id.split("/")
                  .pop()
                  ?.replace(".mdx", "") || ""
              }`}
              class="inline-flex items-center justify-center px-6 py-3 text-white bg-blue-600 hover:bg-blue-700 rounded-lg font-medium transition-colors"
            >
              <Icon name="tabler:play" class="w-5 h-5 mr-2" />
              Empezar curso
            </a>
            <a
              href={`https://www.youtube.com/playlist?list=${course.data.youtubePlaylist}`}
              target="_blank"
              class="inline-flex items-center justify-center px-6 py-3 text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg font-medium transition-colors"
            >
              <Icon name="tabler:brand-youtube" class="w-5 h-5 mr-2" />
              Ver en YouTube
            </a>
          </div>
        </div>

        <!-- Imagen del curso -->
        <div class="lg:order-2">
          <div class="aspect-video rounded-lg overflow-hidden shadow-lg">
            <Image
              src={course.data.image}
              alt={course.data.title}
              class="w-full h-full object-cover"
            />
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Contenido del curso -->
  <section class="py-16">
    <div class="container mx-auto px-4">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-12">
        <!-- Contenido principal -->
        <div class="lg:col-span-2">
          <!-- Lo que aprenderás -->
          <div class="mb-12">
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">
              Lo que aprenderás
            </h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
              {
                course.data.learningObjectives.map((objective) => (
                  <div class="flex items-start gap-3">
                    <Icon
                      name="tabler:check"
                      class="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5"
                    />
                    <span class="text-gray-700 dark:text-gray-300">
                      {objective}
                    </span>
                  </div>
                ))
              }
            </div>
          </div>

          <!-- Contenido del curso -->
          <div class="mb-12">
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">
              Sobre este curso
            </h2>
            <div class="prose dark:prose-invert max-w-none">
              <div class="text-gray-700 dark:text-gray-300 leading-relaxed">
                <p class="text-lg mb-4">{course.data.description}</p>

                <p class="mb-4">
                  Este curso completo de <strong
                    >{course.data.stack.join(", ")}</strong
                  > está diseñado para llevarte desde los conceptos básicos hasta
                  un nivel {course.data.level.toLowerCase()}. Con una duración
                  total de <strong>{course.data.duration}</strong> distribuidas en
                  <strong>{course.data.totalLessons} lecciones</strong>, tendrás
                  todo lo que necesitas para dominar esta tecnología.
                </p>

                <p class="mb-4">
                  El curso está completamente en <strong
                    >{course.data.language}</strong
                  > y es
                  <strong>100% gratuito</strong>. Todas las lecciones están
                  disponibles en YouTube y organizadas de manera secuencial para
                  un aprendizaje óptimo.
                </p>

                <h3
                  class="text-xl font-semibold text-gray-900 dark:text-white mt-6 mb-3"
                >
                  Estructura del curso
                </h3>
                <p>
                  El curso está organizado en <strong
                    >{course.data.sections.length} secciones principales</strong
                  >:
                </p>
                <ul class="list-disc list-inside mt-3 space-y-2">
                  {
                    course.data.sections.map((section) => (
                      <li>
                        <strong>{section.title}</strong>: {section.description}(
                        {section.lessons} lección
                        {section.lessons !== 1 ? "es" : ""})
                      </li>
                    ))
                  }
                </ul>
              </div>
            </div>
          </div>

          <!-- Instructor -->
          <div class="mt-12 bg-gray-50 dark:bg-gray-800 rounded-lg p-6">
            <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-4">
              Instructor
            </h3>
            <div class="flex items-center gap-4">
              <div
                class="w-16 h-16 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center overflow-hidden"
              >
                {
                  instructor?.avatar ? (
                    <Image
                      src={instructor.avatar}
                      alt={instructor.name}
                      width={64}
                      height={64}
                      class="w-full h-full object-cover"
                    />
                  ) : (
                    <Icon
                      name="tabler:user"
                      class="w-8 h-8 text-blue-600 dark:text-blue-400"
                    />
                  )
                }
              </div>
              <div>
                <a
                  href={`/authors/${course.data.instructor.id}`}
                  class="font-semibold text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
                >
                  {instructor?.name || "Instructor"}
                </a>
                <p class="text-gray-600 dark:text-gray-400">
                  {instructor?.subtitle || "Instructor y creador de contenido"}
                </p>
              </div>
            </div>
          </div>
        </div>

        <!-- Sidebar - Contenido del curso -->
        <div class="lg:col-span-1">
          <div
            class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 sticky top-8"
          >
            <div class="p-6 border-b border-gray-200 dark:border-gray-700">
              <h3 class="text-lg font-bold text-gray-900 dark:text-white">
                Contenido del curso
              </h3>
              <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">
                {course.data.sections.length} secciones • {
                  course.data.totalLessons
                } lecciones • {course.data.duration}
              </p>
            </div>

            <div class="max-h-96 overflow-y-auto">
              {
                course.data.sections.map((section, sectionIndex) => {
                  const lessons = sectionLessons.get(section.slug) || [];
                  return (
                    <div class="border-b border-gray-200 dark:border-gray-700 last:border-b-0">
                      <button
                        class="w-full p-4 text-left hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors section-toggle"
                        data-section={sectionIndex}
                      >
                        <div class="flex items-center justify-between">
                          <div>
                            <h4 class="font-medium text-gray-900 dark:text-white">
                              {section.title}
                            </h4>
                            <p class="text-sm text-gray-600 dark:text-gray-400">
                              {lessons.length} lecciones
                            </p>
                          </div>
                          <Icon
                            name="tabler:chevron-down"
                            class="w-4 h-4 text-gray-400 transform transition-transform section-icon"
                          />
                        </div>
                      </button>

                      <div class="section-content hidden">
                        {lessons.map((lesson: any) => (
                          <a
                            href={`/cursos-gratis/${course.id.replace("/index", "")}/${section.slug}/${lesson.id.split("/").pop()?.replace(".mdx", "")}`}
                            class="block p-3 pl-8 hover:bg-blue-50 dark:hover:bg-blue-900/20 border-l-2 border-transparent hover:border-blue-500 transition-colors"
                          >
                            <div class="flex items-center justify-between">
                              <span class="text-sm text-gray-700 dark:text-gray-300">
                                {lesson.data.title}
                              </span>
                              <span class="text-xs text-gray-500 dark:text-gray-400">
                                {lesson.data.duration}
                              </span>
                            </div>
                          </a>
                        ))}
                      </div>
                    </div>
                  );
                })
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</MainLayout>

<script is:inline>
  const sectionToggles = () => {
    document.querySelectorAll(".section-toggle").forEach((button) => {
      button.addEventListener("click", () => {
        const content = button.nextElementSibling;
        const icon = button.querySelector(".section-icon");

        if (content?.classList.contains("hidden")) {
          content.classList.remove("hidden");
          icon?.classList.add("rotate-180");
        } else {
          content.classList.add("hidden");
          icon?.classList.remove("rotate-180");
        }
      });
    });
  };

  document.addEventListener("astro:page-load", sectionToggles);
</script>
