---
import CourseCardUdemy from "@/components/CourseCardUdemy.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import Testimonials from "@/sections/Testimonials.astro";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import { udemyCourses } from "@/data/udemy-courses";

const popularCoursesAndNew = udemyCourses.filter(
  (course) => course.popular || course.new
);
---

<MainLayout title="Cursos | Roelcode">
  <section class="hero-course py-20">
    <div class="2xl:container mx-auto p-3">
      <div class="overflow-hidden relative">
        <div class="carousel-courses">
          {
            popularCoursesAndNew.map((course: any) => (
              <div class="carousel-course-item p-3 rounded-lg md:px-8">
                <div class="grid grid-cols-1 lg:grid-cols-2 px-3 gap-5">
                  <div class="lg:order-2 relative">
                    <Image
                      src={course.image}
                      alt={course.title}
                      class="w-full"
                    />

                    {course.popular && (
                      <div
                        class:list={[
                          "absolute top-0 left-4 bg-yellow-400 text-slate-900 font-bold py-1 px-4 rounded",
                          "text-center lg:text-start inline-block my-4",
                        ]}
                      >
                        Lo más vendido
                      </div>
                    )}

                    {course.new && (
                      <div
                        class:list={[
                          "absolute top-0 left-4 bg-emerald-400 text-slate-900 font-bold py-2 px-4 rounded",
                          "text-center lg:text-start inline-block my-4",
                        ]}
                      >
                        Nuevo
                      </div>
                    )}
                  </div>
                  <div class="lg:order-1">
                    <h2 class="text-2xl lg:text-4xl font-bold text-center lg:text-start text-gray-800 dark:text-gray-300">
                      {course.title}
                    </h2>
                    <p class="text-base lg:text-xl my-4 text-slate-500 text-center lg:text-start">
                      {course.description}
                    </p>
                    <p class="flex items-center justify-center lg:justify-start">
                      <span class="font-semibold text-xl mr-2">
                        {course.qualification}
                      </span>
                      {new Array(4).fill(0).map((_) => (
                        <Icon
                          name="star-icon"
                          size={20}
                          class="text-yellow-600"
                        />
                      ))}
                      <Icon
                        name="star-half-icon"
                        size={20}
                        class="text-yellow-600"
                      />
                    </p>
                    <p class="my-4 text-slate-500 text-center lg:text-start">
                      {course.hours} horas de {course.class} clases
                    </p>
                    <div class="flex justify-center lg:justify-start">
                      <a href={course.url} class="btn-primary" target="_blank">
                        Ver curso
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            ))
          }
        </div>

        <button
          id="prevCourse"
          class="absolute top-0 left-0 text-slate-700 text-2xl h-full"
        >
          <Icon name="arrow-left-icon" />
        </button>
        <button
          id="nextCourse"
          class="absolute top-0 right-0 text-slate-700 text-2xl h-full"
        >
          <Icon name="arrow-right-icon" />
        </button>
      </div>
    </div>
  </section>

  <section class="curses-premium py-5 xl:py-32 bg-gray-100 dark:bg-gray-900">
    <div class="2xl:container mx-auto p-3">
      <div
        class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4 gap-5 lg:gap-y-20"
      >
        {udemyCourses.map((course: any) => <CourseCardUdemy course={course} />)}
      </div>
    </div>
  </section>

  <Testimonials />
</MainLayout>

<style>
  .carousel-courses {
    display: flex;
    transition: transform 0.5s ease-in-out;
  }
  .carousel-course-item {
    min-width: 100%;
  }
</style>

<script is:inline>
  const carouselCurseFunc = () => {
    const carouselCourse = document.querySelector(".carousel-courses");
    const carouselCourseItems = document.querySelectorAll(
      ".carousel-course-item"
    );
    const prevCourseBtn = document.getElementById("prevCourse");
    const nextCourseBtn = document.getElementById("nextCourse");
    let counter = 0;
    const itemWidth = carouselCourseItems[0].clientWidth;
    const autoSlideInterval = 5000; // Tiempo de 3 segundos entre cada cambio

    // Función para mostrar el ítem anterior
    const showPrevCourseItem = () => {
      counter--;
      if (counter < 0) {
        counter = carouselCourseItems.length - 1;
      }
      carouselCourse.style.transform = `translateX(${-counter * itemWidth}px)`;
    };

    // Función para mostrar el siguiente ítem
    const showNextCourseItem = () => {
      counter++;
      if (counter >= carouselCourseItems.length) {
        counter = 0;
      }
      carouselCourse.style.transform = `translateX(${-counter * itemWidth}px)`;
    };

    // Event listeners para los botones
    prevCourseBtn.addEventListener("click", () => {
      showPrevCourseItem();
      resetAutoSlide(); // Reiniciar el intervalo si el usuario interactúa
    });

    nextCourseBtn.addEventListener("click", () => {
      showNextCourseItem();
      resetAutoSlide(); // Reiniciar el intervalo si el usuario interactúa
    });

    // Función para iniciar el deslizamiento automático
    const startAutoSlide = () => {
      return setInterval(showNextCourseItem, autoSlideInterval);
    };

    // Reiniciar el auto deslizamiento cuando el usuario interactúa
    let autoSlide = startAutoSlide();

    const resetAutoSlide = () => {
      clearInterval(autoSlide);
      autoSlide = startAutoSlide();
    };
  };

  document.addEventListener("astro:page-load", carouselCurseFunc);
</script>
