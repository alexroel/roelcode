---
import "@/styles/global.css";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import ThemeProvider from "@/components/utils/ThemeProvider.astro";

export interface Props {
  title: string;
  description?: string;
  image?: string;
  canonical?: string;
  type?: "website" | "article" | "course" | "profile";
  schema?: any;
  keywords?: string;
  author?: string;
  publishedTime?: string;
  modifiedTime?: string;
}

const {
  title,
  description = "Instructor de programación especializado en desarrollo web. Cursos de HTML, CSS, JavaScript, Python, Go, Java y más.",
  image = "/open-graph-reolcode.jpg",
  canonical,
  type = "website",
  schema,
  keywords = "programación, desarrollo web, cursos, HTML, CSS, JavaScript, Python, Go, Java, Udemy, instructor",
  author = "Roel Code",
  publishedTime,
  modifiedTime,
} = Astro.props;

const canonicalURL = canonical || new URL(Astro.url.pathname, Astro.site);
const fullImageURL = new URL(image, Astro.url);
const currentDate = new Date().toISOString();

// Schema markup base para el sitio
const baseSchema = {
  "@context": "https://schema.org",
  "@type": "Person",
  name: "Roel Code",
  url: "https://roelcode.github.io",
  image: fullImageURL,
  description:
    "Instructor de programación especializado en desarrollo web con más de 8 años de experiencia",
  jobTitle: "Desarrollador Full Stack & Instructor",
  worksFor: {
    "@type": "Organization",
    name: "Udemy",
    url: "https://www.udemy.com/user/roel-code/",
  },
  knowsAbout: [
    "JavaScript",
    "Python",
    "Go",
    "Java",
    "HTML",
    "CSS",
    "React",
    "Node.js",
    "Flask",
    "TailwindCSS",
    "Desarrollo Web",
    "Programación",
  ],
  sameAs: [
    "https://www.udemy.com/user/roel-code/",
    "https://www.youtube.com/@roelcode",
    "https://www.facebook.com/roelcode",
    "https://www.tiktok.com/@roelcode",
    "https://github.com/roelcode",
  ],
  hasOccupation: {
    "@type": "Occupation",
    name: "Instructor de Programación",
    occupationLocation: {
      "@type": "Place",
      name: "Online",
    },
    skills: "Desarrollo Web, Programación, Enseñanza Online",
  },
};

// Schema para el sitio web
const websiteSchema = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  name: "Roel Code",
  url: "https://roelcode.github.io",
  description: description,
  inLanguage: "es",
  potentialAction: {
    "@type": "SearchAction",
    target: "https://roelcode.github.io/cursos?search={search_term_string}",
    "query-input": "required name=search_term_string",
  },
  author: {
    "@type": "Person",
    name: "Roel Code",
  },
  publisher: {
    "@type": "Person",
    name: "Roel Code",
    logo: {
      "@type": "ImageObject",
      url: new URL("/favicon.svg", Astro.url),
    },
  },
};

// Combinar schemas
const finalSchema = schema
  ? [baseSchema, websiteSchema, schema]
  : [baseSchema, websiteSchema];
---

<!doctype html>
<html lang="es" data-theme="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <meta name="author" content={author} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta
      name="robots"
      content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1"
    />
    <meta name="googlebot" content="index, follow" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Preconnect para mejorar performance -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://www.udemy.com" />

    <!-- DNS Prefetch -->
    <link rel="dns-prefetch" href="//www.youtube.com" />
    <link rel="dns-prefetch" href="//www.facebook.com" />
    <link rel="dns-prefetch" href="//www.tiktok.com" />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Open Graph / Facebook - Completo -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={fullImageURL} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:alt" content={`${title} - Roel Code`} />
    <meta property="og:site_name" content="Roel Code" />
    <meta property="og:locale" content="es_ES" />
    <meta property="og:locale:alternate" content="en_US" />
    {
      publishedTime && (
        <meta property="article:published_time" content={publishedTime} />
      )
    }
    {
      modifiedTime && (
        <meta property="article:modified_time" content={modifiedTime} />
      )
    }
    <meta property="article:author" content="Roel Code" />
    <meta property="article:section" content="Programación" />
    <meta
      property="article:tag"
      content="programación, desarrollo web, cursos"
    />

    <!-- Twitter Card - Completo -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@roelcode" />
    <meta name="twitter:creator" content="@roelcode" />
    <meta name="twitter:url" content={canonicalURL} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={fullImageURL} />
    <meta name="twitter:image:alt" content={`${title} - Roel Code`} />

    <!-- LinkedIn -->
    <meta property="linkedin:owner" content="roelcode" />

    <!-- WhatsApp -->
    <meta property="whatsapp:title" content={title} />
    <meta property="whatsapp:description" content={description} />
    <meta property="whatsapp:image" content={fullImageURL} />

    <!-- Schema.org JSON-LD -->
    <script type="application/ld+json" set:html={JSON.stringify(finalSchema)} />

    <!-- Breadcrumb Schema (si aplica) -->
    {
      Astro.url.pathname !== "/" && (
        <script
          type="application/ld+json"
          set:html={JSON.stringify({
            "@context": "https://schema.org",
            "@type": "BreadcrumbList",
            itemListElement: [
              {
                "@type": "ListItem",
                position: 1,
                name: "Inicio",
                item: "https://roelcode.github.io",
              },
              {
                "@type": "ListItem",
                position: 2,
                name: title,
                item: canonicalURL,
              },
            ],
          })}
        />
      )
    }

    <title>{title}</title>

    <script>
      const theme = localStorage.theme;
      const prefersDark = window.matchMedia(
        "(prefers-color-scheme: dark)"
      ).matches;

      if (theme === "dark" || (!theme && prefersDark)) {
        document.documentElement.setAttribute("data-theme", "dark");
      } else {
        document.documentElement.setAttribute("data-theme", "light");
      }

      function setTheme(mode) {
        if (mode === "system") {
          localStorage.removeItem("theme");
        } else {
          localStorage.theme = mode;
        }
        document.documentElement.setAttribute("data-theme", mode);
      }
    </script>
  </head>
  <body
    class="bg-slate-100 dark:bg-slate-900 text-slate-950 dark:text-slate-50 font-inter antialiased"
  >
    <Header />
    <main class="min-h-screen">
      <slot />
    </main>
    <Footer />

    <script>
      // Initialize theme on page load
      function setTheme(mode) {
        if (mode === "system") {
          localStorage.removeItem("theme");
          const prefersDark = window.matchMedia(
            "(prefers-color-scheme: dark)"
          ).matches;
          document.documentElement.setAttribute(
            "data-theme",
            prefersDark ? "dark" : "light"
          );
        } else {
          localStorage.setItem("theme", mode);
          document.documentElement.setAttribute("data-theme", mode);
        }
      }

      window.setTheme = setTheme;
    </script>
  </body>
</html>
